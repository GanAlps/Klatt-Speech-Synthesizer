function [F0, ttf, A2, A3, A4, A5, A6, AB, AV, AH, AF, AVS, tt, F, BW] = makespeech2(utt)
% FGP FGZ FGS FNP FNZ F1 F2 F3 F4 F5 F6 BGP BGZ BGS BNP BNZ BW1 BW2 BW3 BW4 BW5 BW6 A2 A3 A4 A5 A6 AB AH AF AV AVS Weight
segments=[
0 1500 0 250 250 290 610 2150 3300 3750 4900 100 6000 100 100 100 50 80 60 250 200 1000 0 0 0 0 0 0 0 0 50 0 1 % /w/
0 1500 0 250 250 260 2070 3020 3300 3750 4900 100 6000 100 100 100 40 250 500 250 200 1000 0 0 0 0 0 0 0 0 50 0 1 % /y/
0 1500 0 250 250 310 1060 1380 3300 3750 4900 100 6000 100 100 100 70 100 120 250 200 1000 0 0 0 0 0 0 0 0 50 0 1 % /r/
0 1500 0 250 250 310 1050 2880 3300 3750 4900 100 6000 100 100 100 50 100 280 250 200 1000 0 0 0 0 0 0 0 0 50 0 1 % /l/
0 1500 0 270 450 480 1270 2130 3300 3750 4900 100 6000 100 100 100 40 200 200 250 200 1000 0 0 0 0 0 0 0 0 40 50 1 % /m/
0 1500 0 270 450 480 1340 2470 3300 3750 4900 100 6000 100 100 100 40 300 300 250 200 1000 0 0 0 0 0 0 0 0 40 50 1 % /n/
0 1500 0 270 450 480 2000 2900 3300 3750 4900 100 6000 100 100 100 40 300 300 250 200 1000 0 0 0 0 0 0 0 0 40 50 1 % /N/
0 1500 0 250 250 340 1100 2080 3300 3750 4900 100 6000 100 100 100 200 120 150 250 200 1000 0 0 0 0 0 57 0 20 0 0 1 % /f/
0 1500 0 250 250 220 1100 2080 3300 3750 4900 100 6000 100 100 100 60 90 120 250 200 1000 0 0 0 0 0 57 0 20 47 47 1 % /v/
0 1500 0 250 250 320 1290 2540 3300 3750 4900 100 6000 100 100 100 200 90 200 250 200 1000 0 0 0 0 28 38 0 20 0 0 1 % /T/
0 1500 0 250 250 270 1290 2540 3300 3750 4900 100 6000 100 100 100 60 80 170 250 200 1000 0 0 0 0 28 38 0 20 47 47 1 % /D/
0 1500 0 250 250 320 1390 2530 3300 3750 4900 100 6000 100 100 100 200 80 200 250 200 1000 0 0 0 0 52 0 0 20 0 0 1 % /s/
0 1500 0 250 250 240 1390 2530 3300 3750 4900 100 6000 100 100 100 70 60 180 250 200 1000 0 0 0 0 52 0 0 20 47 47 1 % /z/
0 1500 0 250 250 300 1840 2750 3300 3750 4900 100 6000 100 100 100 200 100 300 250 200 1000 0 28 24 24 23 0 0 20 0 0 1 % /S/
0 1500 0 250 250 220 1840 2750 3300 3750 4900 100 6000 100 100 100 70 60 280 250 200 1000 0 28 24 24 23 0 0 20 47 47 1 % /Z/
0 1500 0 250 250 350 1800 2820 3300 3750 4900 100 6000 100 100 100 200 90 300 250 200 1000 0 22 30 26 26 0 0 10 0 0 1 % /c/
0 1500 0 250 250 260 1800 2820 3300 3750 4900 100 6000 100 100 100 60 80 270 250 200 1000 0 22 30 26 26 0 0 10 37 37 1 % /j/
0 1500 0 250 250 200 1100 2150 3300 3750 4900 100 6000 100 100 100 60 110 130 250 200 1000 0 0 0 0 0 63 0 10 20 20 1 % /b/
0 1500 0 250 250 200 1600 2600 3300 3750 4900 100 6000 100 100 100 60 100 170 250 200 1000 0 23 30 31 30 0 0 10 20 20 1 % /d/
0 1500 0 250 250 200 1990 2850 3300 3750 4900 100 6000 100 100 100 60 150 280 250 200 1000 30 27 22 23 23 0 0 10 20 20 1 % /g/
0 1500 0 250 250 400 1100 2150 3300 3750 4900 100 6000 100 100 100 300 150 220 250 200 1000 0 0 0 0 0 63 0 20 0 0 1 % /p/
0 1500 0 250 250 400 1600 2600 3300 3750 4900 100 6000 100 100 100 300 120 250 250 200 1000 0 15 23 28 32 0 0 20 0 0 1 % /t/
0 1500 0 250 250 300 1990 2850 3300 3750 4900 100 6000 100 100 100 250 160 330 250 200 1000 30 26 22 23 23 0 0 20 0 0 1 % /k/
0 1500 0 250 250 310 2020 2960 3300 3750 4900 100 6000 100 100 100 45 200 400 250 200 1000 0 0 0 0 0 0 0 0 60 0 1 % /i/
0 1500 0 250 250 290 2070 2960 3300 3750 4900 100 6000 100 100 100 60 200 400 250 200 1000 0 0 0 0 0 0 0 0 60 0 1
0 1500 0 250 250 400 1800 2570 3300 3750 4900 100 6000 100 100 100 50 100 140 250 200 1000 0 0 0 0 0 0 0 0 60 0 .8% /I/
0 1500 0 250 250 470 1600 2600 3300 3750 4900 100 6000 100 100 100 50 100 140 250 200 1000 0 0 0 0 0 0 0 0 60 0 1
0 1500 0 250 250 480 1720 2520 3300 3750 4900 100 6000 100 100 100 70 100 200 250 200 1000 0 0 0 0 0 0 0 0 60 0 1 % /e/
0 1500 0 250 250 330 2020 2600 3300 3750 4900 100 6000 100 100 100 55 100 200 250 200 1000 0 0 0 0 0 0 0 0 60 0 1
0 1500 0 250 250 530 1680 2500 3300 3750 4900 100 6000 100 100 100 60 90 200 250 200 1000 0 0 0 0 0 0 0 0 60 0 .8% /E/
0 1500 0 250 250 620 1530 2530 3300 3750 4900 100 6000 100 100 100 60 90 200 250 200 1000 0 0 0 0 0 0 0 0 60 0 1
0 1500 0 250 250 620 1660 2430 3300 3750 4900 100 6000 100 100 100 70 150 320 250 200 1000 0 0 0 0 0 0 0 0 60 0 1.2% /A/
0 1500 0 250 250 650 1490 2470 3300 3750 4900 100 6000 100 100 100 70 100 320 250 200 1000 0 0 0 0 0 0 0 0 60 0 1
0 1500 0 250 250 700 1220 2600 3300 3750 4900 100 6000 100 100 100 130 70 160 250 200 1000 0 0 0 0 0 0 0 0 60 0 1.1% /a/
0 1500 0 250 250 700 1220 2600 3300 3750 4900 100 6000 100 100 100 130 70 160 250 200 1000 0 0 0 0 0 0 0 0 60 0 1
0 1500 0 250 250 600 990 2570 3300 3750 4900 100 6000 100 100 100 90 100 80 250 200 1000 0 0 0 0 0 0 0 0 60 0 1 % />/
0 1500 0 250 250 630 1040 2600 3300 3750 4900 100 6000 100 100 100 90 100 80 250 200 1000 0 0 0 0 0 0 0 0 60 0 1
0 1500 0 250 250 620 1220 2550 3300 3750 4900 100 6000 100 100 100 80 50 140 250 200 1000 0 0 0 0 0 0 0 0 60 0 .7% /^/
0 1500 0 250 250 620 1220 2550 3300 3750 4900 100 6000 100 100 100 80 50 140 250 200 1000 0 0 0 0 0 0 0 0 60 0 1
0 1500 0 250 250 540 1100 2300 3300 3750 4900 100 6000 100 100 100 80 70 70 250 200 1000 0 0 0 0 0 0 0 0 60 0 1% /o/
0 1500 0 250 250 450 900 2300 3300 3750 4900 100 6000 100 100 100 80 70 70 250 200 1000 0 0 0 0 0 0 0 0 60 0 1
0 1500 0 250 250 450 1100 2350 3300 3750 4900 100 6000 100 100 100 80 100 80 250 200 1000 0 0 0 0 0 0 0 0 60 0 .8% /U/
0 1500 0 250 250 500 1180 2390 3300 3750 4900 100 6000 100 100 100 80 100 80 250 200 1000 0 0 0 0 0 0 0 0 60 0 1
0 1500 0 250 250 350 1250 2200 3300 3750 4900 100 6000 100 100 100 65 110 140 250 200 1000 0 0 0 0 0 0 0 0 60 0 1% /u/
0 1500 0 250 250 320 900 2200 3300 3750 4900 100 6000 100 100 100 65 110 140 250 200 1000 0 0 0 0 0 0 0 0 60 0 1
0 1500 0 250 250 500 1400 2300 3300 3750 4900 100 6000 100 100 100 100 60 110 250 200 1000 0 0 0 0 0 0 0 0 50 0 .6% /*/
0 1500 0 250 250 500 1400 2300 3300 3750 4900 100 6000 100 100 100 100 60 110 250 200 1000 0 0 0 0 0 0 0 0 50 0 1
0 1500 0 250 250 660 1200 2550 3300 3750 4900 100 6000 100 100 100 100 70 200 250 200 1000 0 0 0 0 0 0 0 0 60 0 1.2 % /@/
0 1500 0 250 250 400 1880 2500 3300 3750 4900 100 6000 100 100 100 70 100 200 250 200 1000 0 0 0 0 0 0 0 0 60 0 1
0 1500 0 250 250 640 1230 2550 3300 3750 4900 100 6000 100 100 100 80 70 140 250 200 1000 0 0 0 0 0 0 0 0 60 0 1.2 % /&/
0 1500 0 250 250 420 940 2350 3300 3750 4900 100 6000 100 100 100 80 70 80 250 200 1000 0 0 0 0 0 0 0 0 60 0 1
0 1500 0 250 250 550 960 2400 3300 3750 4900 100 6000 100 100 100 80 50 130 250 200 1000 0 0 0 0 0 0 0 0 60 0 1.2 % /!/
0 1500 0 250 250 360 1820 2450 3300 3750 4900 100 6000 100 100 100 60 50 160 250 200 1000 0 0 0 0 0 0 0 0 60 0 1];
%intitiate the matrices and variables
tt = [];
ttf = [];
vals = [];
nextt = 0;
nas = 0;
offset = 0;
stop = 0;
vowels = 0;
for i=1:1:length(utt)
id = getid(utt(i));
if id >= 24 & id < 53
tw = segments(id, 33); % adjust length of vowel according to parameters in col 33 above.
vowels = vowels + 1;
if i == 1
tt(length(tt)+1) = 0;
else
tt(length(tt)+1) = round(tt(length(tt))+(nextt*tw));
end;
if i ~= length(utt) % determine if nasalization requited at end of vowel before nasal
if getid(utt(i+1)) >= 5 & getid(utt(i+1)) <=7
nas = 1;
offset = 2;
end;
end;
tt(length(tt)+1) = round(tt(length(tt))+(2100/2*tw));
% tt(length(tt)+1) = round(tt(length(tt))+(1000/2*tw));
% tt(length(tt)+1) = round(tt(length(tt))+(300/2*tw));
[y x]=size(vals);
vals(y+1:y+2, :) = [segments(id, :); segments(id, :)];
if nas == 1 % adjust values for nasalization
vals(y+1+offset:y+2+offset, 6) = vals(y+1+offset:y+2+offset, 6)+100;
vals(y+1+offset:y+2+offset, 4:5) = [(vals(y+1+offset:y+2+offset, 6)+270)./2 [450;450]];
nas = 0; offset = 0;
end;
nextt=round(300/2*tw);
elseif id <=23 %
if i == 1
tt(length(tt)+1) = 0;
else
tt(length(tt)+1) = tt(length(tt))+nextt;
end
if id <=15 time1 = 2000; time2 = 500; fric = 0; % values for fricatives, and sonorant consonants
elseif id >= 21 time1 = 100; time2 = 600; fric = 30; stop = 1; % values for voiceless stops
tt(length(tt)+1) = tt(length(tt))+500;
[y x] = size(vals);
vals(y+1:y+2,:) = [segments(id, :); segments(id, :)];
vals(y+1:y+2, 30) = [0; 0];
tt(length(tt)+1) = tt(length(tt))+200;
elseif id == 16 | id == 17 time1 = 1000; time2 = 500; fric = 10; % affricates
tt(length(tt)+1) = tt(length(tt))+500;
[y x] = size(vals);
vals(y+1:y+2,:) = [segments(id, :); segments(id, :)];
vals(y+1:y+2, 30:31) = [0, 0; 0, 0;];
tt(length(tt)+1) = tt(length(tt))+200;
else time1 = 100; time2 = 600; fric = 10; stop = 1;% values for voiced stops
end
tt(length(tt)+1) = tt(length(tt))+time1;
[y x] = size(vals);
vals(y+1:y+2, :) = [segments(id, :); segments(id, :)];
if stop == 1
if i == length(utt) %suppress release of final stops and when desired with '-'
vals(y+1:y+2, 29:30) = [50 0; 20 0];
elseif i ~= length(utt) & utt(i+1) == '-'
vals(y+1:y+2, 29:30) = [50 0; 20 0];
else
vals(y+1, 30) = fric;
end;
else
vals(y+1, 30) = fric;
end;
if vals(y+1, 5) > 250
nas = 1;
end;
nextt = time2;
stop = 0;
elseif id == 53 %h
if i == 1
tt(length(tt)+1) = 0;
else
tt(length(tt)+1) = tt(length(tt))+nextt;
end
tt(length(tt)+1) = tt(length(tt))+2000;
[y x] = size(vals);
vals(y+1:y+2, :) = [segments(getid(utt(i+1)), :); segments(getid(utt(i+1)), :)];
vals(y+1:y+2, 6) = [300; 300];
vals(y+1:y+2, 29) = [50; 50];
vals(y+1:y+2, 31) = [0; 0];
nextt = 500;
elseif id == 54 %aspiration
tt(length(tt)) = tt(length(tt))+300;
nextt = nextt+300;
end;
end;
totalt = tt(length(tt))+nextt;
display(['Set Simulation time to ' num2str(totalt)]);
tt = tt';
vals(:, 33) = [];
A2 = vals(:, 23);
A3 = vals(:, 24);
A4 = vals(:, 25);
A5 = vals(:, 26);
A6 = vals(:, 27);
AB = vals(:, 28);
AH = vals(:, 29);
AF = vals(:, 30);
AV = vals(:, 31);
AVS = vals(:, 32);
F = vals(:, 1:11);
BW = vals(:, 12:22);
if vowels == 1;
ttf = [0; round(totalt/3); 2*round(totalt/3); totalt];
F0 = [130; 130; 130; 130];
elseif vowels >= 2
ttf = [0; round(totalt/(5)); 2*round(totalt/(5)); 3*round(totalt/(5)); 4*round(totalt/(5)); totalt];
F0 = [130; 130; 130; 130; 130; 130];%[120; 140; 130; 130; 100; 100];
end;
function out = getid(tofind) % function that gets numerical position of ASCII phonemes
index = 'wyrlmnNfvTDszSZcjbdgptki I e E A a > ^ o U u * @ & !h"-';
% 1 5 0 5 0
out = find(index==tofind);